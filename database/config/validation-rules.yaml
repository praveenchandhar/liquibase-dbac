# MongoDB Validation Rules
# Schema validation rules for collections to ensure data integrity

# Product Collection Validation Rules
products:
  validationLevel: strict
  validationAction: error
  jsonSchema:
    bsonType: object
    required: [sku, name, category, price, createdAt]
    additionalProperties: false
    properties:
      _id:
        bsonType: objectId
        description: "MongoDB ObjectId"
      sku:
        bsonType: string
        pattern: "^[A-Z0-9]{6,12}$"
        description: "Product SKU - 6-12 alphanumeric characters, uppercase"
        examples: ["PROD001", "ELECT123", "CLOTH001"]
      name:
        bsonType: string
        minLength: 1
        maxLength: 200
        description: "Product name - required, 1-200 characters"
      category:
        bsonType: string
        enum: [electronics, clothing, books, home, sports, beauty, toys, automotive]
        description: "Product category - must be from predefined list"
      price:
        bsonType: decimal
        minimum: 0
        exclusiveMinimum: false
        description: "Product price - must be non-negative decimal"
      description:
        bsonType: string
        maxLength: 1000
        description: "Product description - optional, max 1000 characters"
      tags:
        bsonType: array
        items:
          bsonType: string
          maxLength: 50
        maxItems: 20
        uniqueItems: true
        description: "Product tags - array of unique strings, max 20 items"
      inventory:
        bsonType: object
        required: [quantity, warehouse]
        additionalProperties: false
        properties:
          quantity:
            bsonType: int
            minimum: 0
            description: "Available quantity - non-negative integer"
          warehouse:
            bsonType: string
            pattern: "^WH-[0-9]{3}$"
            description: "Warehouse code - format: WH-XXX"
          reserved:
            bsonType: int
            minimum: 0
            description: "Reserved quantity - non-negative integer"
          location:
            bsonType: string
            maxLength: 100
            description: "Storage location within warehouse"
      specifications:
        bsonType: object
        description: "Product specifications - flexible object"
        patternProperties:
          ".*":
            oneOf:
              - bsonType: string
              - bsonType: number
              - bsonType: boolean
      status:
        bsonType: string
        enum: [active, inactive, discontinued, pending]
        description: "Product status"
      createdAt:
        bsonType: date
        description: "Creation timestamp - required"
      updatedAt:
        bsonType: date
        description: "Last update timestamp"
      createdBy:
        bsonType: string
        maxLength: 100
        description: "User who created the record"
      updatedBy:
        bsonType: string
        maxLength: 100
        description: "User who last updated the record"

# Categories Collection Validation Rules
categories:
  validationLevel: strict
  validationAction: error
  jsonSchema:
    bsonType: object
    required: [code, name, active]
    additionalProperties: false
    properties:
      _id:
        bsonType: objectId
      code:
        bsonType: string
        pattern: "^[a-z]+$"
        minLength: 3
        maxLength: 20
        description: "Category code - lowercase letters only, 3-20 chars"
      name:
        bsonType: string
        minLength: 1
        maxLength: 100
        description: "Category display name"
      description:
        bsonType: string
        maxLength: 500
        description: "Category description"
      active:
        bsonType: bool
        description: "Whether category is active"
      parentCategory:
        bsonType: string
        pattern: "^[a-z]+$"
        description: "Parent category code for hierarchical structure"
      sortOrder:
        bsonType: int
        minimum: 0
        description: "Display sort order"
      metadata:
        bsonType: object
        description: "Additional category metadata"
      createdAt:
        bsonType: date
      updatedAt:
        bsonType: date

# Orders Collection Validation Rules  
orders:
  validationLevel: strict
  validationAction: error
  jsonSchema:
    bsonType: object
    required: [orderNumber, customerId, items, status, createdAt]
    additionalProperties: false
    properties:
      _id:
        bsonType: objectId
      orderNumber:
        bsonType: string
        pattern: "^ORD-[0-9]{8}$"
        description: "Order number format: ORD-YYYYMMDD"
      customerId:
        bsonType: string
        minLength: 1
        maxLength: 50
        description: "Customer identifier"
      items:
        bsonType: array
        minItems: 1
        maxItems: 100
        items:
          bsonType: object
          required: [sku, quantity, price]
          additionalProperties: false
          properties:
            sku:
              bsonType: string
              pattern: "^[A-Z0-9]{6,12}$"
            quantity:
              bsonType: int
              minimum: 1
              maximum: 1000
            price:
              bsonType: decimal
              minimum: 0
            discount:
              bsonType: decimal
              minimum: 0
              maximum: 100
              description: "Discount percentage (0-100)"
      status:
        bsonType: string
        enum: [pending, confirmed, processing, shipped, delivered, cancelled, refunded]
        description: "Order status"
      totalAmount:
        bsonType: decimal
        minimum: 0
        description: "Total order amount"
      currency:
        bsonType: string
        pattern: "^[A-Z]{3}$"
        description: "Currency code (ISO 4217)"
      shippingAddress:
        bsonType: object
        required: [street, city, country, postalCode]
        properties:
          street:
            bsonType: string
            maxLength: 200
          city:
            bsonType: string
            maxLength: 100
          state:
            bsonType: string
            maxLength: 100
          country:
            bsonType: string
            pattern: "^[A-Z]{2}$"
            description: "Country code (ISO 3166-1 alpha-2)"
          postalCode:
            bsonType: string
            maxLength: 20
      paymentMethod:
        bsonType: string
        enum: [credit_card, debit_card, paypal, bank_transfer, cash_on_delivery]
      notes:
        bsonType: string
        maxLength: 1000
        description: "Order notes and comments"
      createdAt:
        bsonType: date
      updatedAt:
        bsonType: date
      processedAt:
        bsonType: date
      deliveredAt:
        bsonType: date

# Index Definitions for Performance
recommendedIndexes:
  products:
    - keys: { sku: 1 }
      options: { unique: true, name: "idx_products_sku_unique" }
    - keys: { category: 1, status: 1 }
      options: { name: "idx_products_category_status" }
    - keys: { tags: 1 }
      options: { name: "idx_products_tags" }
    - keys: { "inventory.warehouse": 1, "inventory.quantity": 1 }
      options: { name: "idx_products_inventory" }
    - keys: { createdAt: -1 }
      options: { name: "idx_products_created_desc" }
    - keys: { name: "text", description: "text" }
      options: { name: "idx_products_text_search" }

  categories:
    - keys: { code: 1 }
      options: { unique: true, name: "idx_categories_code_unique" }
    - keys: { parentCategory: 1, sortOrder: 1 }
      options: { name: "idx_categories_hierarchy" }
    - keys: { active: 1, sortOrder: 1 }
      options: { name: "idx_categories_active_sort" }

  orders:
    - keys: { orderNumber: 1 }
      options: { unique: true, name: "idx_orders_number_unique" }
    - keys: { customerId: 1, createdAt: -1 }
      options: { name: "idx_orders_customer_date" }
    - keys: { status: 1, createdAt: -1 }
      options: { name: "idx_orders_status_date" }
    - keys: { "items.sku": 1 }
      options: { name: "idx_orders_items_sku" }
    - keys: { createdAt: -1 }
      options: { name: "idx_orders_created_desc" }

# Validation Rules Metadata
metadata:
  version: "1.0.0"
  lastUpdated: "2025-01-01"
  description: "MongoDB validation rules for Product Service collections"
  maintainer: "Database Team"
  reviewedBy: "Technical Architecture Team"
